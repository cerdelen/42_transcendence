generator client {
	provider = "prisma-client-js"
	binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource backend_database {
	provider	= "postgresql"
	url			= env("DATABASE_URL")
}

// ? means a field is optional

model User {
	// User stuff
	id						Int			@unique
	name					String		@unique
	mail					String
	// chatParticipant	ChatParticipant?	@relation(fields: [chatPtsId], references: [ChatPartId])
	conversation_id_arr		Int[]
	user_msg_arr			Message[]
			


	// picture			String?

	// 2_FA_stuff
	two_FA_enabled	Boolean    @default(false)
	two_FA_secret	String?
}

model Conversation {
	// User stuff
	conversation_id					Int					@unique  @id @default(autoincrement()) 
	conversation_name				String?		
	conversation_msg_arr			Message[]
	conversation_created_at			DateTime			@default(now())
	// chat_participants	ChatParticipant[]	
	conversation					Boolean				@default(true)
	//something to consider later after creating chat
	conversation_is_public			Boolean		@default(true)
	conversation_pass_protected		Boolean		@default(false)
	conversation_password			String?		

	conversation_participant_arr	Int[]
	conversation_owner_arr			Int[]
	conversation_admin_arr			Int[] 
	conversation_black_list_arr		Int[]
	conversation_mute_list_arr		Int[]
}

// model ChatParticipant {

// 	ChatPartId		Int				@unique @id @default(autoincrement())
// 	// chat			Chat			@relation(fields: [ChatPartId], references: [chat_id])
// 	chat			Chat[]
// 	// user			User?			@relation(fields: [userId], references: [id])
// 	userId			User?			

// 	// @@map(name: "chat_role")
// }

model Message {
	// User stuff
	msg_id				Int			@unique  @id @default(autoincrement()) 
	user_id				Int			@default(0) 
	user_name			String		@default("default_name")
	text				String
	created_at			DateTime	@default(now())

	//necessary fro array of messages in Chat model
	conversation_id				Int?			
	usr_id						Int?			
	conversation_relation		Conversation?		@relation(fields: [conversation_id], references: [conversation_id])
	user_relation				User?				@relation(fields: [user_id], references: [id])		
}



//  id: Number(id),
//         ecole42Id: Number(id),
//         name: username,
//         achievementsId: 1,
//         mail: email,